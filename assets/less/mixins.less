/* =============================================================================
   Disable / enable text size
   ========================================================================== */

.text-zero() {
    font: ~'0/0' a;
}

.text-base() {
    font: ~'@{font-size-base}/@{line-height-base}' @font-family-base;
}

/* =============================================================================
   Square button
   ========================================================================== */

@square-button-size: 60px;

.square-button() {
    text-align: center;
    color: #fff;
    text-decoration: none;
    background: @vc_gray;
    transition: background-color .1s ease-in-out;

    .screen({
        font-size: ( @square-button-size * .7 * .6 );

        &, .glyphicon:before {
            width: (@square-button-size * .7);
            height: (@square-button-size * .7);
            line-height: (@square-button-size * .7);
        }

    },{
        font-size: ( @square-button-size * .8 * .6 );

        &, .glyphicon:before {
            width: (@square-button-size * .8);
            height: (@square-button-size * .8);
            line-height: (@square-button-size * .8);
        }

    },{
        font-size: ( @square-button-size * .6 );

        &, .glyphicon:before {
            width: @square-button-size;
            height: @square-button-size;
            line-height: @square-button-size;
        }

    });

    &:hover {
        background: @vc_blue;
        color: #fff;
    }

    &, .glyphicon:before {
        display: inline-block;
    }
}

/* =============================================================================
   Grayscale images
   ========================================================================== */

.img-grayscale() {
    filter: url('../img/grayscale.svg#on');
    -webkit-filter: grayscale(1);
}

.img-grayscale-off() {
    filter: url('../img/grayscale.svg#off');
    -webkit-filter: grayscale(0);
}

/* =============================================================================
   Multi-level ordered list with hierarchical index
   ========================================================================== */

ol.chapter-index {
    counter-reset: item;

    li {
        &:before {
            content: counters(item, ".") ".";
            counter-increment: item;
        }
    }

    ol {
        li {
            &:before {
                content: counters(item, ".") " ";
            }
        }
    }
}



/* =============================================================================
   Pulsing images
   ========================================================================== */

.pulse {
    .animation-name(pulse);
    .animation-duration(1.5s);
    .animation-iteration-count(infinite);
    .animation-timing-function(ease-in-out);
}

.pulse-frames() {
    0% {
        .scale( .9, .9 );
        opacity: .6;
    }
    50% {
        .scale( 1, 1 );
        opacity: .9;
    }
    100% {
        .scale( .9, .9 );
        opacity: .6;
    }
}

@-webkit-keyframes pulse { .pulse-frames; }
   @-moz-keyframes pulse { .pulse-frames; }
    @-ms-keyframes pulse { .pulse-frames; }
     @-o-keyframes pulse { .pulse-frames; }
        @keyframes pulse { .pulse-frames; }



/* =============================================================================
   "Realistic key look" for KBD tags
   ========================================================================== */

.kbd-key() {
    display: inline;
    display: inline-block;
    margin: 0 .2em;
    min-width: 1em;
    padding: .35em .35em;
    font-weight: normal;
    font-family:  "Lucida Grande", Lucida, Arial, sans-serif;
    font-size: .85em;
    text-transform: uppercase;
    line-height: 1em;
    text-align: center;
    text-decoration: none;
    border: none;
    cursor: default;
    color:  rgb(50, 50, 50);
    text-shadow: 0 0 2px rgb(255, 255, 255);
    border-radius: .3em;
    box-shadow:
        0 0 1px rgb(255, 255, 255) inset,
        0 0 .4em rgb(200, 200, 200) inset,
        0 .1em 0 rgb(130, 130, 130),
        0 .11em 0 rgba(0, 0, 0, .4),
        0 .1em .11em rgba(0, 0, 0, .9);
    .user-select( none );
    #gradient > .vertical(
        rgb(210, 210, 210),
        rgb(255, 255, 255)
    );

    &[title] {
        cursor: help;
    }

}

/* =============================================================================
   Media queries for different screen sizes
   ========================================================================== */

// xs only
.screen-xs(@rules) {
    @media (max-width: @screen-xs-max) { @rules(); }
}

// sm and larger
.screen-sm-min(@rules) {
    @media (min-width: @screen-sm-min) { @rules(); }
}

// sm only
.screen-sm(@rules) {
    @media (min-width: @screen-sm-min) and (max-width: @screen-sm-max) { @rules(); }
}

// sm and smaller
.screen-sm-max(@rules) {
    @media (max-width: @screen-sm-max) { @rules(); }
}

// md and larger
.screen-md-min(@rules) {
    @media (min-width: @screen-md-min) { @rules(); }
}

// md only
.screen-md(@rules) {
    @media (min-width: @screen-md-min) and (max-width: @screen-md-max) { @rules(); }
}

// md and smaller
.screen-md-max(@rules) {
    @media (max-width: @screen-md-max) { @rules(); }
}

// lg and larger
.screen-lg(@rules) {
    @media (min-width: @screen-lg-min) { @rules(); }
}

// 1: xs only, 2: sm and larger
.screen(@rules-xs, @rules-sm) {
    .screen-xs(@rules-xs);
    .screen-sm-min(@rules-sm);
}

// 1: xs only, 2: sm only, 3: md and larger
.screen(@rules-xs, @rules-sm, @rules-md) {
    .screen-xs(@rules-xs);
    .screen-sm(@rules-sm);
    .screen-md-min(@rules-md);
}

// 1: xs only, 2: sm only, 3: md only, 4: lg and larger
.screen(@rules-xs, @rules-sm, @rules-md, @rules-lg) {
    .screen-xs(@rules-xs);
    .screen-sm(@rules-sm);
    .screen-md(@rules-md);
    .screen-lg(@rules-lg);
}
